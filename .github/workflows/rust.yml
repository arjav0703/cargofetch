name: Build Cargofetch

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  NIGHTLY_BUILD: 1

permissions:
  contents: write
  id-token: write
  pull-requests: read

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: Windows
          os: windows-latest
        
        - name: macOS
          os: macos-latest
        
        - name: Linux
          os: ubuntu-latest

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Cache Cargo Registry and Builds
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Lint
      run: cargo clippy --verbose

    - name: Add x64 for macOS
      if: contains(matrix.config.os, 'macos')
      run: rustup target add x86_64-apple-darwin

    - name: Build
      run: |
        cargo build --verbose
        cargo build --release --verbose

    - name: Build for Intel Macs
      if: contains(matrix.config.os, 'macos')
      run: |
        cargo build --verbose --target x86_64-apple-darwin
        cargo build --release --verbose --target x86_64-apple-darwin

    - name: Combine macOS Builds
      if: contains(matrix.config.os, 'macos')
      run: |
        lipo -create \
           target/release/cargofetch \
           target/x86_64-apple-darwin/release/cargofetch \
           -output target/release/cargofetch-universal
        lipo -create \
           target/debug/cargofetch \
           target/x86_64-apple-darwin/debug/cargofetch \
           -output target/debug/cargofetch

    - name: Change File Names
      shell: bash
      id: rename
      run: |
        if [[ ${{ matrix.config.os }} == 'windows-latest' ]]; then
          echo "debugfilename=cargofetch-debug-nightly.exe" >> $GITHUB_OUTPUT
          echo "releasefilename=cargofetch-release-nightly.exe" >> $GITHUB_OUTPUT
          mv target/debug/cargofetch.exe target/debug/cargofetch-debug-nightly.exe
          mv target/release/cargofetch.exe target/release/cargofetch-release-nightly.exe
        elif [[ ${{ matrix.config.os }} == 'macos-latest' ]]; then
          echo "debugfilename=cargofetch-debug-nightly-macos" >> $GITHUB_OUTPUT
          echo "releasefilename=cargofetch-release-nightly-macos" >> $GITHUB_OUTPUT
          mv target/debug/cargofetch-universal target/debug/cargofetch-debug-nightly-macos
          mv target/release/cargofetch-universal target/release/cargofetch-release-nightly-macos
        else
          echo "debugfilename=cargofetch-debug-nightly-linux" >> $GITHUB_OUTPUT
          echo "releasefilename=cargofetch-release-nightly-linux" >> $GITHUB_OUTPUT
          mv target/debug/cargofetch target/debug/cargofetch-debug-nightly-linux
          mv target/release/cargofetch target/release/cargofetch-release-nightly-linux
        fi

    - name: Upload nightly debug artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.rename.outputs.debugfilename }}
        path: target/debug/${{ steps.rename.outputs.debugfilename }}

    - name: Upload nightly release artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.rename.outputs.releasefilename }}
        path: target/release/${{ steps.rename.outputs.releasefilename }}

  package:
    name: Package Builds
    runs-on: ubuntu-latest
    needs: build

    steps:
    - uses: actions/download-artifact@v4
      with:
        path: "artifacts2"

    - name: move artifacts
      run: |
        mkdir artifacts
        mv artifacts2/*/* artifacts

    - name: Release nightly
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: andelf/nightly-release@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: nightly
        name: 'Development Release'
        body: |
          Generated nightly release for cargofetch.
          Will be unstable!
        files: |
          artifacts/*
  
